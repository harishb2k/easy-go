emissaryConfiguration:
  clientConfiguration:
    clientName: SomeApp
    enableNewRelicLogging: true
    newRelicLoggingPrefix: SomeApp-NewRelic
  services:
    local:
      type: http
      host: localhost
      port: 12345
      apis:
        simpleGetMethod:
          method: GET
          path: /v1/simpleGetMethod
          acceptableResponseCodes: [200]
          connectionRequestTimeout: 50
          concurrency: 4
          maxRequestQueueSize: 100
          requestTimeout: 10000
          elixirEnabled: true
        simplePostMethod:
          method: POST
          path: /v1/simplePostMethod
          acceptableResponseCodes: [200]
          connectionRequestTimeout: 50
          concurrency: 4
          maxRequestQueueSize: 100
          requestTimeout: 10000
          elixirEnabled: true
        simpleGetMethodWithError:
          method: GET
          path: /v1/simpleGetMethodWithError
          acceptableResponseCodes: [200]
          connectionRequestTimeout: 50
          concurrency: 4
          maxRequestQueueSize: 100
          requestTimeout: 10000
          elixirEnabled: true
        simplePostMethodWithError:
          method: POST
          path: /v1/simplePostMethodWithError
          acceptableResponseCodes: [200]
          connectionRequestTimeout: 50
          concurrency: 4
          maxRequestQueueSize: 100
          requestTimeout: 10000
          elixirEnabled: true
    serviceA:
      type: http
      host: jsonplaceholder.typicode.com
      port: 80
      apis:
        update:
          method: GET
          path: /todos/1
          acceptableResponseCodes: [200]
          connectionRequestTimeout: 50
          concurrency: 4
          maxRequestQueueSize: 100
          requestTimeout: 10000
          elixirEnabled: true
    serviceB:
      type: http
      host: jsonplaceholder.typicode.com
      port: 80
      apis:
        update:
          method: GET
          path: /todos/$${id}
          acceptableResponseCodes: [200]
          connectionRequestTimeout: 50
          concurrency: 4
          maxRequestQueueSize: 100
          requestTimeout: 10000
          elixirEnabled: true
        updateGet:
          method: GET
          path: /todos/$${id}
          acceptableResponseCodes: [200]
          connectionRequestTimeout: 50
          concurrency: 4
          maxRequestQueueSize: 100
          requestTimeout: 10000
          elixirEnabled: true
        updateWithAcceptableCode_400:
          method: GET
          path: /todos/$${id}
          acceptableResponseCodes: [200, 400]
          connectionRequestTimeout: 50
          concurrency: 4
          maxRequestQueueSize: 100
          requestTimeout: 10000
          elixirEnabled: true
        updateWithCircuitOpenCase:
          method: GET
          path: /todos/$${id}
          acceptableResponseCodes: [200, 400]
          connectionRequestTimeout: 50
          concurrency: 2
          maxRequestQueueSize: 100
          requestTimeout: 10000
          elixirEnabled: true
